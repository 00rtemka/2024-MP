import math
import random
import numpy as np
class Radar(position):
    _position =position
    def __new__(cls):
          if cls._position is None:
              cls._position = super(Radar, cls).__new__(cls)
          return cls._position
    def __init__:
          pass
     

class Vector:
    def __init__(self, x, y, z):
        self.x = x
        self.y = y
        self.z = z
    def __mul_vect__(self, arg):
        return Vector(self.x * arg, self.y * arg, self.z * arg)
    def spherical(self):
        r = math.sqrt(self.x**2 + self.y**2 + self.z**2)
        phi = math.atan2(self.y, self.x) 
        theta = math.atan2(self.z, math.sqrt(self.x**2 + self.y**2))
        return r, math.degrees(phi), math.degrees(theta)

class flying_object:
    def __init__(self, position, v):
        self.position = position
        self.velocity = v
        self.time = 0 

    def new_position(self, time):
        self.time = time
 objects = []
for _ in range(num_objects):
        position = Vector(random.uniform(-10000, 10000),
                            random.uniform(-10000, 10000),
                            random.uniform(-10000, 10000))
        velocity = Vector(random.uniform(-800, 800),
                            random.uniform(-800, 800),
                            random.uniform(-800, 800))
        objects.append(flying_object(position, velocity))
